# pybricks blocks file:{"blocks":{"languageVersion":0,"blocks":[{"type":"blockGlobalSetup","id":"bjK,wS1MYO7aiYkFSwd{","x":-70,"y":-51,"deletable":false,"next":{"block":{"type":"variables_set_prime_hub","id":"0]yjN7!Xe,:tle{K@D$Q","extraState":{"optionLevel":0},"fields":{"VAR":{"id":"/.iXOxRsGKOX:~PwF:EE"}},"next":{"block":{"type":"variables_setup_imported_function","id":"waRFdtJv!9X^UCPt`j/~","fields":{"FROM_MODULE":{"id":"|Zj8s8DG5`I5qdD_s#~s"},"VAR":{"id":"`e:G}`,A1Zj+Bzsa(smn"}},"next":{"block":{"type":"variables_setup_imported_function","id":"1$]C7t.,5=B~U7PulJZT","fields":{"FROM_MODULE":{"id":"|Zj8s8DG5`I5qdD_s#~s"},"VAR":{"id":"UiQMM1s?(;tTl.*LnJi8"}},"next":{"block":{"type":"variables_setup_imported_function","id":".NdgoK70!]D?J_ZxS?D(","fields":{"FROM_MODULE":{"id":"|Zj8s8DG5`I5qdD_s#~s"},"VAR":{"id":"#$-R:8/VhDvDUNwKe@S7"}},"next":{"block":{"type":"variables_setup_any","id":"iz`FUt:}tf!N9!06OHAy","fields":{"VAR":{"id":"Yt_/`$HJh@U]wLi,VH./"}},"inputs":{"VALUE0":{"shadow":{"type":"blockMathNumber","id":"|dLq:pr8!47A]8m|sPcw","fields":{"NUM":0}}}},"next":{"block":{"type":"variables_setup_any","id":"6UZ~w!d^vZ82`)W%v#kl","fields":{"VAR":{"id":"`rs:l$OMm4ocH~,$]j+u"}},"inputs":{"VALUE0":{"shadow":{"type":"blockMathNumber","id":"P~a)Lx23N!xGZv:[$#z|","fields":{"NUM":0}}}},"next":{"block":{"type":"variables_setup_any","id":"g2UrYAgG`]@%yCiEO!YN","fields":{"VAR":{"id":"s=)YVol|uLsU[I1i_hUP"}},"inputs":{"VALUE0":{"shadow":{"type":"blockMathNumber","id":")Ftnd?BH*U-lr^vmdRv|","fields":{"NUM":0}}}}}}}}}}}}}}}}}}},{"type":"blockGlobalStart","id":"3tJe|AWl0baN(wH9a$@.","x":448,"y":-73,"deletable":false,"next":{"block":{"type":"blockImportTaskCallStatement","id":"#:Tf`I^tO%CpZm@Z*5ve","extraState":{"optionLevel":1},"inputs":{"VAR":{"shadow":{"type":"variables_get_imported_function","id":",POTD)=Jp*,O+h9EIp!b","fields":{"VAR":{"id":"`e:G}`,A1Zj+Bzsa(smn","name":"init","type":"FunctionImported"}}}},"ARG0":{"shadow":{"type":"blockMathNumber","id":"pWX[G3+A}~oj84XXCk6(","fields":{"NUM":0}},"block":{"type":"blockTextLiteral","id":"=v]p-5vM;t#Hp,0pFt/c","fields":{"TEXT":"A"}}}},"next":{"block":{"type":"blockComment","id":"*kMrjy;.h8]~Ib*-`=Ci","fields":{"FIELDNAME":"pup_add_command  <name> <to_hub> <from_hub>"},"next":{"block":{"type":"blockImportTaskCallStatement","id":"AuS5[yv:xQ~|M5DG+.FZ","extraState":{"optionLevel":3},"inputs":{"VAR":{"shadow":{"type":"variables_get_imported_function","id":"I1gO;?TlHWrRCe,v{O`A","fields":{"VAR":{"id":"UiQMM1s?(;tTl.*LnJi8","name":"add_command","type":"FunctionImported"}}}},"ARG0":{"shadow":{"type":"blockMathNumber","id":"##W}~tz)*PsT3@{=un+N","fields":{"NUM":0}},"block":{"type":"blockTextLiteral","id":"uOKOaqD+p]QT?z`!}^tM","fields":{"TEXT":"imu"}}},"ARG1":{"shadow":{"type":"blockMathNumber","id":";f3[wq8-DWv@wkb!kyz0","fields":{"NUM":0}}},"ARG2":{"shadow":{"type":"blockMathNumber","id":"nb,nd0kOw*Q{2E(PZ++R","fields":{"NUM":3}}}},"next":{"block":{"type":"blockFlowWhile","id":"Ye^9Yj#`o[l]Dvkc+(dA","fields":{"MODE":"WHILE"},"inputs":{"BOOL":{"shadow":{"type":"blockLogicTrue","id":"Kg_jiXjH4|T.lq@tp7r{"}},"DO":{"block":{"type":"blockVariableSetValue","id":"q-`Iw:N[D=K:/,F^7/ED","inputs":{"VAR":{"shadow":{"type":"variables_get_any","id":"tS3kR1!?r~HCLr:CXZj0","fields":{"VAR":{"id":"Yt_/`$HJh@U]wLi,VH./","name":"x","type":"Any"}}}},"VALUE0":{"shadow":{"type":"blockMathNumber","id":"tPc{%bKM|etTm+In-)FG","fields":{"NUM":0}},"block":{"type":"blockImuAcceleration","id":"1MSQ`y_58-u)qjg%F`p3","extraState":{"optionLevel":0},"inputs":{"VAR":{"shadow":{"type":"variables_get_accelerometer_hub","id":"H+^#a]7Pq*]vwXEPY*tl","fields":{"VAR":{"id":"/.iXOxRsGKOX:~PwF:EE","name":"prime hub","type":"PrimeHub"}}}},"VALUE0":{"shadow":{"type":"blockParametersAxis","id":"qfo/{._8AuQ~Z0iUP*Sd","fields":{"VALUE":"x"}}}}}}},"next":{"block":{"type":"blockVariableSetValue","id":"Lt~ddFU09il|!Ils:7z$","inputs":{"VAR":{"shadow":{"type":"variables_get_any","id":"F.NiL0;G!e[Gh~x|H!_d","fields":{"VAR":{"id":"`rs:l$OMm4ocH~,$]j+u","name":"y","type":"Any"}}}},"VALUE0":{"shadow":{"type":"blockMathNumber","id":"frOS1EqD8Y:Z~n}BUKon","fields":{"NUM":0}},"block":{"type":"blockImuAcceleration","id":"/TonIr]q`ucV9/AH:tc(","extraState":{"optionLevel":0},"inputs":{"VAR":{"shadow":{"type":"variables_get_accelerometer_hub","id":"Z!nC*us7C#ww)!hU-3(g","fields":{"VAR":{"id":"/.iXOxRsGKOX:~PwF:EE","name":"prime hub","type":"PrimeHub"}}}},"VALUE0":{"shadow":{"type":"blockParametersAxis","id":"flX@K{3J)fEAl-N:d1l`","fields":{"VALUE":"y"}}}}}}},"next":{"block":{"type":"blockVariableSetValue","id":"6ravWtb$YChL0N2wu!p]","inputs":{"VAR":{"shadow":{"type":"variables_get_any","id":"VT4{0UNK+Kt]@I#,I%~U","fields":{"VAR":{"id":"s=)YVol|uLsU[I1i_hUP","name":"z","type":"Any"}}}},"VALUE0":{"shadow":{"type":"blockMathNumber","id":"K8RnfC8)[B#Ob{#bm-,Q","fields":{"NUM":0}},"block":{"type":"blockImuAcceleration","id":"Dras,(Y7[dVN(p:xVe[?","extraState":{"optionLevel":0},"inputs":{"VAR":{"shadow":{"type":"variables_get_accelerometer_hub","id":"Q.$ww2!bGgq:b^10]x$/","fields":{"VAR":{"id":"/.iXOxRsGKOX:~PwF:EE","name":"prime hub","type":"PrimeHub"}}}},"VALUE0":{"shadow":{"type":"blockParametersAxis","id":"O|^e!D-fDQh[]=pS6jG}","fields":{"VALUE":"z"}}}}}}},"next":{"block":{"type":"blockImportTaskCallStatement","id":"pX,!gbCJ.Ha=18!@?LsA","extraState":{"optionLevel":4},"inputs":{"VAR":{"shadow":{"type":"variables_get_imported_function","id":";-w*%+]z{M(8jkc?6V]?","fields":{"VAR":{"id":"#$-R:8/VhDvDUNwKe@S7","name":"call","type":"FunctionImported"}}}},"ARG0":{"shadow":{"type":"blockMathNumber","id":"OUsS![iWm/DO_nxfjOPj","fields":{"NUM":0}},"block":{"type":"blockTextLiteral","id":"G0eDoZ(;$#I?X[KX%$Nf","fields":{"TEXT":"imu"}}},"ARG1":{"shadow":{"type":"blockMathNumber","id":"Yb)6-y%yWav}]TgInzD^","fields":{"NUM":0}},"block":{"type":"blockVariableGetValue","id":"ozo`Hqypc@8N==+x3{|C","inputs":{"VAR":{"shadow":{"type":"variables_get_any","id":"@`0m$mUmdDYhbJ;q5KG]","fields":{"VAR":{"id":"Yt_/`$HJh@U]wLi,VH./","name":"x","type":"Any"}}}}}}},"ARG2":{"shadow":{"type":"blockMathNumber","id":"LN%(W7C6~=UJUyz{ADgD","fields":{"NUM":0}},"block":{"type":"blockVariableGetValue","id":"N29Y:5TuWmt?p(,eZq/P","inputs":{"VAR":{"shadow":{"type":"variables_get_any","id":"K~M%h{o*Jm)ym36S.J:X","fields":{"VAR":{"id":"`rs:l$OMm4ocH~,$]j+u","name":"y","type":"Any"}}}}}}},"ARG3":{"shadow":{"type":"blockMathNumber","id":"EoD[2sJEUkoQN%X!%*dT","fields":{"NUM":0}},"block":{"type":"blockVariableGetValue","id":"/ua70G*.dg,|E?Npc*$5","inputs":{"VAR":{"shadow":{"type":"variables_get_any","id":"Zs*8;=R`Aqj5O-0yc34i","fields":{"VAR":{"id":"s=)YVol|uLsU[I1i_hUP","name":"z","type":"Any"}}}}}}}}}}}}}}}}}}}}}}}}}}]},"variables":[{"name":"red","id":"m$aimZQ-GWux^Aqo#Umj","type":"ColorDef"},{"name":"orange","id":"BCukx`#::+sFM*FXxk6P","type":"ColorDef"},{"name":"yellow","id":"T,@|Vta}1P_p}R9g[tDq","type":"ColorDef"},{"name":"green","id":"[Wy=lDiKxtcqM@6*8(/s","type":"ColorDef"},{"name":"cyan","id":"SM(,#Aqw8(21{bG56(h0","type":"ColorDef"},{"name":"blue","id":"O3T+MJyyWO.[gkJvS8O;","type":"ColorDef"},{"name":"violet","id":"XJum(V3`w_^Mn!S`0|W;","type":"ColorDef"},{"name":"magenta","id":".bhS$IQZY/93{is{8u,A","type":"ColorDef"},{"name":"white","id":"p@Zpc2iew-yl0]{qZtAk","type":"ColorDef"},{"name":"none","id":"U~22lutZm`-NNC)TBszc","type":"ColorDef"},{"name":"micropup","id":"|Zj8s8DG5`I5qdD_s#~s","type":"ModuleImported"},{"name":"prime hub","id":"/.iXOxRsGKOX:~PwF:EE","type":"PrimeHub"},{"name":"init","id":"`e:G}`,A1Zj+Bzsa(smn","type":"FunctionImported"},{"name":"add_command","id":"UiQMM1s?(;tTl.*LnJi8","type":"FunctionImported"},{"name":"call","id":"#$-R:8/VhDvDUNwKe@S7","type":"FunctionImported"},{"name":"x","id":"Yt_/`$HJh@U]wLi,VH./","type":"Any"},{"name":"y","id":"`rs:l$OMm4ocH~,$]j+u","type":"Any"},{"name":"z","id":"s=)YVol|uLsU[I1i_hUP","type":"Any"}],"info":{"type":"pybricks","version":"1.3.2"}}
from pybricks.hubs import PrimeHub
from pybricks.parameters import Axis

from micropup import add_command, call, init

# Set up all devices.
prime_hub = PrimeHub()

# Initialize variables.
x = 0
y = 0
z = 0


# The main program starts here.
init('A')
# pup_add_command  <name> <to_hub> <from_hub>
add_command('imu', 0, 3)
while True:
    x = prime_hub.imu.acceleration(Axis.X)
    y = prime_hub.imu.acceleration(Axis.Y)
    z = prime_hub.imu.acceleration(Axis.Z)
    call('imu', x, y, z)
